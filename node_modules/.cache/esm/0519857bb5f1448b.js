let defaultFieldResolver,ApolloError,SchemaDirectiveVisitor;_b5f‍.x([["IsAuthDirective",()=>IsAuthDirective]]);_b5f‍.w("graphql",[["defaultFieldResolver",["defaultFieldResolver"],function(v){defaultFieldResolver=v}]]);_b5f‍.w("apollo-server-express",[["ApolloError",["ApolloError"],function(v){ApolloError=v}],["SchemaDirectiveVisitor",["SchemaDirectiveVisitor"],function(v){SchemaDirectiveVisitor=v}]]);


       class IsAuthDirective extends SchemaDirectiveVisitor {
  visitFieldDefinition(field) {
    const { resolve = defaultFieldResolver } = field;

    field.resolve = async function (...args) {
      let [_, {}, { user, isAuth }] = args;

      if (isAuth) {
        const result = await resolve.apply(this, args);

        return result;
      } else {
        throw new ApolloError("Unauthenticated User!",401);
      }
    };
  }
}