let model,Schema,mongoose,MongoosePaginate;_e15‍.x([["default",()=>_e15‍.o]]);_e15‍.w("mongoose",[["model",["model"],function(v){model=v}],["Schema",["Schema"],function(v){Schema=v}],["default",["mongoose"],function(v){mongoose=v}]]);_e15‍.w("mongoose-paginate-v2",[["default",["MongoosePaginate"],function(v){MongoosePaginate=v}]]);





const orderSchema = new Schema({
    status: {
        type: String,
        enum: ['pending', 'pickup', 'completed'],
        default: 'pending'
    },
    product_info: [{
        type: mongoose.Types.ObjectId,
        ref: 'product'
    }],
    buyer_info: {
        type: mongoose.Types.ObjectId,
        ref: 'user'
    },
    delivery_info: {
        type: mongoose.Types.ObjectId,
        ref: 'user'
    },
    seller_info: {
        type: mongoose.Types.ObjectId,
        ref: 'user'
    }
}, {
    timestamps: true
});
orderSchema.plugin(MongoosePaginate);
_e15‍.d(model('order', orderSchema));